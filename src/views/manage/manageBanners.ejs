<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Manage Banners</title>
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback"
    />
    <link rel="stylesheet" href="/plugins/fontawesome-free/css/all.min.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
    />
    <link rel="stylesheet" href="/dist/css/adminlte.min.css" />
    <link
      href="//cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@4/dark.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/css/admin.css" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
      crossorigin="anonymous"
    />
    <style>
      .result {
        display: flex;
      }

      .result input {
        width: 90%;
        border-radius: 5px 0 0 5px;
      }

      .result .input-group-text {
        width: 10%;
        border-radius: 0 5px 5px 0;
        justify-content: center;
        cursor: pointer;
        background-color: #007bff;
        color: #fff;
      }

      .result .input-group-text:active,
      .result .input-group-text:hover {
        background-color: #2ecc71;
      }
    </style>
  </head>

  <body class="hold-transition sidebar-mini">
    <div class="wrapper">
      <%- include('nav') %>
      <div class="content-wrapper">
        <section class="content-header">
          <div class="container-fluid">
            <div class="row mb-2">
              <div class="col-sm-6">
                <h1>Manage Banners</h1>
              </div>
            </div>
          </div>
          <!-- /.container-fluid -->
        </section>

        <div class="container-fluid">
          <div class="card">
            <div class="row">
              <div class="col-md-12">
                <div style="padding: 10px 20px">
                  <div class="form-group money">
                    <label for="user">Select File</label>
                    <input
                      id="file"
                      name="file"
                      type="file"
                      class="form-control"
                      placeholder="Select file"
                    />
                  </div>

                  <button
                    type="submit"
                    class="btn btn-danger"
                    id="submit"
                    style="width: 100%; margin-top: 26px"
                  >
                    Upload
                  </button>
                </div>
              </div>
            </div>
          </div>
          <div id="list-details-news" style="align-items:center"><div>
        </div>
      </div>
    </div>
    <script src="/plugins/jquery/jquery.min.js"></script>
    <script src="/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/dist/js/adminlte.min.js"></script>
    <script src="/js/admin/admin.js"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>

    <script>
      function formateT(params) {
        let result = params < 10 ? '0' + params : params;
        return result;
      }

      function timerJoin(params = '', addHours = 0) {
        let date = '';
        if (params) {
          date = new Date(Number(params));
        } else {
          date = new Date();
        }

        date.setHours(date.getHours() + addHours);

        let years = formateT(date.getFullYear());
        let months = formateT(date.getMonth() + 1);
        let days = formateT(date.getDate());

        let hours = date.getHours() % 12;
        hours = hours === 0 ? 12 : hours;
        let ampm = date.getHours() < 12 ? 'AM' : 'PM';

        let minutes = formateT(date.getMinutes());
        let seconds = formateT(date.getSeconds());

        return (
          years +
          '-' +
          months +
          '-' +
          days +
          ' ' +
          hours +
          ':' +
          minutes +
          ':' +
          seconds +
          ' ' +
          ampm
        );
      }
     const RenderBannerImages = (datas) => {
  if (datas.length === 0) {
    $('#list-details-news').html(`
      <tr class="text-center">
        <td colspan="7">No More Data...</td>
      </tr>
    `);
    return;
  }
  
  let html = '';
  datas.forEach((data) => {
    html += ` 
      <div class="card" style="flex-direction: row; justify-content:center; align-items: flex-start;">
        <img src="https://numolo.com/uploads/${data}" alt="banner_image" style="width:50%; padding:10px;">
        <button type="button" class="btn btn-tool delete-banner" data-data="${data}" title="Remove" style="margin-top: 5px;">
          <i class="fas fa-times"></i>
        </button>
      </div>`;
  });
  $('#list-details-news').html(html);
  
  // Add event listener for delete banners
  $('.delete-banner').click(function () {
    const data = $(this).data('data');
    deleteBan(data);
  });
};

async function deleteBan(data) {
  if (!data) {
    alert('No selected file');
    return;
  }

  try {
    await $.ajax({
      type: 'DELETE',
      url: `/api/files/${data}`,
      error: function (xhr, status, error) {
        const errorMessage = xhr.responseJSON ? xhr.responseJSON.message : 'An error occurred';
        console.error('XHR Error:', errorMessage);
        alert(errorMessage);
      },
    });
    
    // Refresh data and window after deletion
    setTimeout(() => {
      fetchFiles();
    }, 3000);
  } catch (error) {
    console.error('Delete Error:', error);
  }
}

$('.copy_link').click(function (e) {
  var url = $('#money_result').val();
  navigator.clipboard.writeText(url);
  Swal.fire('Good job!', 'Copy Success!', 'success');
});

const fetchFiles = () => {
  $.ajax({
    type: 'GET',
    url: '/api/files', 
    success: function (response) {
      RenderBannerImages(response);
    },
    error: function (xhr, status, error) {
      const errorMessage = xhr.responseJSON ? xhr.responseJSON.message : 'An error occurred';
      console.error('XHR Error:', errorMessage);
      alert(errorMessage);
    },
  });
};

// Initial fetch of files
fetchFiles();

$('#submit').click(async function (e) {
  e.preventDefault();
  let fileInput = $('#file')[0].files[0]; // Get the selected file

  let formData = new FormData();
  formData.append('file', fileInput); // Append the file to FormData
  if (fileInput) {
    try {
      await $.ajax({
        type: 'POST',
        url: '/api/upload',
        data: formData,
        processData: false,
        contentType: false,
        dataType: 'json',
        success: function () {
          $('#file').val('');
          alert('File upload successful');
        },
        error: function (xhr, status, error) {
          // Removed 'response' parameter
          console.log('xhr : ', xhr.responseJSON.message);
          alert(xhr.responseJSON.message);
        },
      }); 
      // Refresh data and window after upload
      setTimeout(() => {
         fetchFiles();
      }, 1000);
    } catch (error) {
      console.error('Upload Error:', error);
    }
  } else {
    alert('Please select file');
  }
});

    </script>
  </body>
</html>
